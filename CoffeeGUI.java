/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package coffeeapp;

import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.text.DecimalFormat;
import java.util.ArrayList;
import javax.swing.JOptionPane;

/**
 *
 * @author x17742461
 */
public class CoffeeGUI extends javax.swing.JFrame {

    //Abubakar
    Sale e;
    //ArrayList For Sales
    ArrayList <StaffS> array=new ArrayList();
    ArrayList <Retail> array1=new ArrayList();
 String name;
    String sid;
    String pid;
    String stid;
   double price;
   double dis;
    int quantity;
    int count;
    String comment;
    String input;
    String sInput;
    String delete;
    double total;
    
    
    //Umer
    //ArrayList For Stocks
     ArrayList<Packing>array3=new ArrayList();
        ArrayList<Dairy>array2=new ArrayList();
        Stock c;
        int count1;
        String material;
        String date;
        int temp;
        
       //Mark
         Order p;
         //ArrayList For Puchase Orders
    ArrayList<ODairy> array4 = new ArrayList();
    ArrayList<Packaging> array5 = new ArrayList();
    String pInput;
    String cName;
    double cost;
    int count2;
    String weight;
   
    /**
     * Creates new form CoffeeGUI
     */
    public CoffeeGUI() {
        initComponents();  
        readFromFile();
        //Abubakar
         name="";
     sid="";
     stid="";
     pid="";
    price=0.0;
    dis=0;
     quantity=0;
     comment="";
     input="";
     sInput="";
     delete="";
    total=0.0;
        count=0;
       
        priceLbl.setVisible(false);
        priceTF.setVisible(false);
        quantityLbl.setVisible(false);
        quantityTF.setVisible(false);
        idLbl.setVisible(false);
        idTF.setVisible(false);
        Box2.setVisible(false);
        disLbl.setVisible(false);
        disTF.setVisible(false);
        idTF.setVisible(false);
      updateBtn.setVisible(false);
        conformBtn.setVisible(false);
        clearBtn.setVisible(false);
        searchBtn.setVisible(false);
        combPur.setVisible(true);
        returnBtn.setVisible(false);
        doneBtn.setVisible(false);
        commentLbl.setVisible(false);
        commentTF.setVisible(false);
        //Umer
        count1=0;
         
        material="";
        date="";
        temp=0;
        matLbl.setVisible(false);
        matTF.setVisible(false);
        pacBtn.setVisible(false);
        daiBtn.setVisible(false);
        daiSBtn.setVisible(false);
        packSBtn.setVisible(false);
        dateLbl.setVisible(false);
        dateTF.setVisible(false);
        temLbl.setVisible(false);
        temTF.setVisible(false);

        box4.setVisible(false);
        box3.setVisible(false);
        //Mark
        pInput = "";
        cName = "";
        cost = 0.0;
        count2 = 0;
        weight = "";

        count2 = 0;
        pInput = "";
       
        nameLbl.setVisible(false);
        nameTF.setVisible(false);
        quantityLbl.setVisible(false);
        quantityTF.setVisible(false);
         packBtn.setVisible(false);
         dairyBtn.setVisible(false);
         
        

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        titleLbl = new javax.swing.JLabel();
        priceLbl = new javax.swing.JLabel();
        quantityLbl = new javax.swing.JLabel();
        idLbl = new javax.swing.JLabel();
        priceTF = new javax.swing.JTextField();
        quantityTF = new javax.swing.JTextField();
        idTF = new javax.swing.JTextField();
        commentLbl = new javax.swing.JLabel();
        commentTF = new javax.swing.JTextField();
        Box2 = new javax.swing.JComboBox<>();
        doneBtn = new javax.swing.JButton();
        clearBtn = new javax.swing.JButton();
        searchBtn = new javax.swing.JButton();
        returnBtn = new javax.swing.JButton();
        disLbl = new javax.swing.JLabel();
        disTF = new javax.swing.JTextField();
        comboBox = new javax.swing.JComboBox<>();
        pacBtn = new javax.swing.JButton();
        daiBtn = new javax.swing.JButton();
        box3 = new javax.swing.JComboBox<>();
        box4 = new javax.swing.JComboBox<>();
        packSBtn = new javax.swing.JButton();
        daiSBtn = new javax.swing.JButton();
        matLbl = new javax.swing.JLabel();
        dateLbl = new javax.swing.JLabel();
        temLbl = new javax.swing.JLabel();
        matTF = new javax.swing.JTextField();
        dateTF = new javax.swing.JTextField();
        temTF = new javax.swing.JTextField();
        combPur = new javax.swing.JComboBox<>();
        nameLbl = new javax.swing.JLabel();
        nameTF = new javax.swing.JTextField();
        packBtn = new javax.swing.JComboBox<>();
        dairyBtn = new javax.swing.JComboBox<>();
        salBtn = new javax.swing.JComboBox<>();
        updateBtn = new javax.swing.JButton();
        conformBtn = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(235, 11, 11));

        titleLbl.setBackground(new java.awt.Color(102, 0, 0));
        titleLbl.setFont(new java.awt.Font("Informal Roman", 1, 48)); // NOI18N
        titleLbl.setForeground(new java.awt.Color(153, 0, 0));
        titleLbl.setText("Cafe Bistro");
        titleLbl.setMaximumSize(new java.awt.Dimension(100, 50));

        priceLbl.setText("Price");

        quantityLbl.setText("Quantity");

        idLbl.setText("ID:");

        commentLbl.setText("Comment");

        Box2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Item!", "Fresh Milk ", "Yoghurt", "Butter 454G", "Cheese", "Coffee", "Hot Chocolate ", "Cake" }));
        Box2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Box2ActionPerformed(evt);
            }
        });

        doneBtn.setBackground(new java.awt.Color(153, 51, 0));
        doneBtn.setForeground(new java.awt.Color(204, 204, 204));
        doneBtn.setText("Done");
        doneBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                doneBtnActionPerformed(evt);
            }
        });

        clearBtn.setBackground(new java.awt.Color(153, 51, 0));
        clearBtn.setForeground(new java.awt.Color(204, 204, 204));
        clearBtn.setText("Clear");
        clearBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearBtnActionPerformed(evt);
            }
        });

        searchBtn.setBackground(new java.awt.Color(153, 51, 0));
        searchBtn.setForeground(new java.awt.Color(204, 204, 204));
        searchBtn.setText("Search ");
        searchBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchBtnActionPerformed(evt);
            }
        });

        returnBtn.setBackground(new java.awt.Color(153, 51, 0));
        returnBtn.setForeground(new java.awt.Color(204, 204, 204));
        returnBtn.setText("Return Sale");
        returnBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                returnBtnActionPerformed(evt);
            }
        });

        disLbl.setText("Discount %");

        comboBox.setBackground(new java.awt.Color(255, 255, 204));
        comboBox.setForeground(new java.awt.Color(204, 0, 0));
        comboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Stock", "Update Stock", "Check Stock" }));
        comboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboBoxActionPerformed(evt);
            }
        });

        pacBtn.setText("Packing");
        pacBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pacBtnActionPerformed(evt);
            }
        });

        daiBtn.setText("Dairy");
        daiBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                daiBtnActionPerformed(evt);
            }
        });

        box3.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Click For Items", "Cups", "Spoons", "Tea Bags", "Tissues" }));
        box3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                box3ActionPerformed(evt);
            }
        });

        box4.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Click For Items", "Milk", "Cheese", "Butter", "Yoghart", "Cake" }));
        box4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                box4ActionPerformed(evt);
            }
        });

        packSBtn.setBackground(new java.awt.Color(255, 255, 204));
        packSBtn.setForeground(new java.awt.Color(204, 0, 0));
        packSBtn.setText("Packing Stock");
        packSBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                packSBtnActionPerformed(evt);
            }
        });

        daiSBtn.setBackground(new java.awt.Color(255, 255, 204));
        daiSBtn.setForeground(new java.awt.Color(204, 0, 0));
        daiSBtn.setText("Dairy Stock");
        daiSBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                daiSBtnActionPerformed(evt);
            }
        });

        matLbl.setText("Material ");

        dateLbl.setText("Receive Date ");

        temLbl.setText("Temperature");

        combPur.setBackground(new java.awt.Color(255, 255, 204));
        combPur.setForeground(new java.awt.Color(204, 0, 0));
        combPur.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Purchace Order", "Diary", "Packaging" }));
        combPur.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                combPurActionPerformed(evt);
            }
        });

        nameLbl.setText("Company Name ");

        packBtn.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Packaging Items", "Cups", "Spoons", "Tea Bags", "Tissues" }));
        packBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                packBtnActionPerformed(evt);
            }
        });

        dairyBtn.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Dairy Items", "Milk", "Cheese", "Butter", "Yoghurt", "Cake" }));
        dairyBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dairyBtnActionPerformed(evt);
            }
        });

        salBtn.setBackground(new java.awt.Color(255, 255, 204));
        salBtn.setForeground(new java.awt.Color(204, 0, 0));
        salBtn.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Sales", "Retail Sale", "Staff Sale " }));
        salBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                salBtnActionPerformed(evt);
            }
        });

        updateBtn.setBackground(new java.awt.Color(153, 51, 0));
        updateBtn.setForeground(new java.awt.Color(204, 204, 204));
        updateBtn.setText("Update");
        updateBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateBtnActionPerformed(evt);
            }
        });

        conformBtn.setBackground(new java.awt.Color(153, 51, 0));
        conformBtn.setForeground(new java.awt.Color(204, 204, 204));
        conformBtn.setText("Conform");
        conformBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                conformBtnActionPerformed(evt);
            }
        });

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/coffeeapp/3.jpg"))); // NOI18N
        jLabel1.setText("jLabel1");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(titleLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 251, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(174, 174, 174))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(66, 66, 66)
                                .addComponent(Box2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(box3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(box4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(111, 111, 111)
                                        .addComponent(pacBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(daiBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(conformBtn)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(doneBtn)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(updateBtn)
                                        .addGap(53, 53, 53)
                                        .addComponent(clearBtn)
                                        .addGap(52, 52, 52)
                                        .addComponent(searchBtn)
                                        .addGap(71, 71, 71)
                                        .addComponent(returnBtn))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(temLbl)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(temTF, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(disLbl)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(disTF, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addComponent(commentLbl)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(quantityLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(priceTF, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(quantityTF, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                            .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(matLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(dateLbl))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(dateTF, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(matTF)))
                                            .addComponent(nameTF, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(43, 43, 43)
                                        .addComponent(packBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(29, 29, 29)
                                        .addComponent(dairyBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(commentTF, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                            .addComponent(idLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                            .addComponent(idTF, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(daiSBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(packSBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(comboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(combPur, 0, 107, Short.MAX_VALUE))
                    .addComponent(salBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(60, 60, 60))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(nameLbl)
                    .addComponent(priceLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(705, Short.MAX_VALUE))
            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 311, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(salBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(titleLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(43, 43, 43)
                        .addComponent(Box2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(7, 7, 7)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(nameLbl)
                            .addComponent(nameTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(priceLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(priceTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(quantityLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(quantityTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(idLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(idTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(commentLbl)
                            .addComponent(commentTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(disLbl)
                            .addComponent(disTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(matLbl)
                            .addComponent(matTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(dateLbl)
                            .addComponent(dateTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(temLbl)
                            .addComponent(temTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 60, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(doneBtn)
                            .addComponent(clearBtn)
                            .addComponent(searchBtn)
                            .addComponent(returnBtn)
                            .addComponent(updateBtn)
                            .addComponent(conformBtn))
                        .addGap(29, 29, 29))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(9, 9, 9)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(daiBtn, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(pacBtn))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(box3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(box4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(28, 28, 28)
                                .addComponent(combPur, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(packBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(dairyBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(2, 2, 2)
                        .addComponent(comboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(packSBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(daiSBtn)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    //Combo box for Sales
    private void Box2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Box2ActionPerformed
        // TODO add your handling code here:
     if(e instanceof Retail){
         if(Box2.getSelectedItem().equals("Cake")){
            
         priceTF.setText("9.99");
         }
         else if(Box2.getSelectedItem().equals("Fresh Milk ")){
           
         priceTF.setText("2.99");
         }
          else if(Box2.getSelectedItem().equals("Coffee")){
             
         priceTF.setText("3.75");
         }
          else if(Box2.getSelectedItem().equals("Butter 454G")){
             
         priceTF.setText("4.99");
         }
        else if(Box2.getSelectedItem().equals("Yoghurt")){
            
         priceTF.setText("3.99");
         }
        else if(Box2.getSelectedItem().equals("Hot Chocolate ")){
            
         priceTF.setText("2.99");
         }
        else if(Box2.getSelectedItem().equals("Cheese")){
        
         priceTF.setText("1.99");
         }
     }
     
     if(e instanceof StaffS){
         if(Box2.getSelectedItem().equals("Cake")){
            
         priceTF.setText("7.99");
         }
         else if(Box2.getSelectedItem().equals("Fresh Milk ")){
           
         priceTF.setText("1.99");
         }
          else if(Box2.getSelectedItem().equals("Coffee")){
             
         priceTF.setText("2.75");
         }
          else if(Box2.getSelectedItem().equals("Butter 454G")){
             
         priceTF.setText("3.99");
         }
        else if(Box2.getSelectedItem().equals("Yoghurt")){
            
         priceTF.setText("2.99");
         }
        else if(Box2.getSelectedItem().equals("Hot Chocolate ")){
            
         priceTF.setText("1.99");
         }
        else if(Box2.getSelectedItem().equals("Cheese")){
        
         priceTF.setText("1.50");
         }
     }
    }//GEN-LAST:event_Box2ActionPerformed

    private void doneBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_doneBtnActionPerformed
         // TODO add your handling code here:
        
        //Abubakar
        if(e instanceof Retail){
            e=new Retail();
            
            readFromFile();
            count=0;
            
            // User select item and item name automatically stores in variable Called Name 
           if(Box2.getSelectedItem().equals("Fresh Milk ")){
           
         name="Fresh Milk";
         }
          else if(Box2.getSelectedItem().equals("Coffee")){
             
         name="Coffee";
         }
          else if(Box2.getSelectedItem().equals("Butter 454G")){
             
         name="Butter 454G";
         }
        else if(Box2.getSelectedItem().equals("Yoghurt")){
            
         name="Yoghurt";
         }
        else if(Box2.getSelectedItem().equals("Hot Chocolate ")){
            
         name="Hot Chocolate";
         }
        else if(Box2.getSelectedItem().equals("Cheese")){
        
         name="Cheese";
         }
        else if(Box2.getSelectedItem().equals("Cake")){
             name="Cake";
         }
           
                    
                
               
           
           
          price=Double.parseDouble(priceTF.getText());
             quantity=Integer.parseInt(quantityTF.getText());
             sid=idTF.getText();
             comment=commentTF.getText();
             total=price*quantity;
             //send info to parent class
             e.setId(sid);
             e.setName(name);
             e.setPrice(price);
             e.setQuantity(quantity);
             e.setTotal(total);
             ((Retail)e).setComment(comment);
             
             //Loop will run to check that entered id already exist in file or not  
             for(Retail x: array1){
                if(x.getId().equals(sid)){

                    count=count+1;
                    
                }
                
             }
             // if id already exist
             if(count>=1){
             JOptionPane.showMessageDialog(null,"ID Already used.Try another one.");
             }
             // if id not exist
             else if(count==0) {
                    array1.add((Retail)e);
                    writeToFile();
                    JOptionPane.showMessageDialog(null,"Done");
                }
             
        }
                
        
        if(e instanceof StaffS){
            readFromFile();
            count=0;
            e=new StaffS();
            // User select item and item name automatically stores in variable Called Name
           if(Box2.getSelectedItem().equals("Fresh Milk ")){
           
         name="Fresh Milk";
         }
          else if(Box2.getSelectedItem().equals("Coffee")){
             
         name="Coffee";
         }
          else if(Box2.getSelectedItem().equals("Butter 454G")){
             
         name="Butter 454G";
         }
        else if(Box2.getSelectedItem().equals("Yoghurt")){
            
         name="Yoghurt";
         }
        else if(Box2.getSelectedItem().equals("Hot Chocolate ")){
            
         name="Hot Chocolate";
         }
        else if(Box2.getSelectedItem().equals("Cheese")){
        
         name="Cheese";
         }
        else if(Box2.getSelectedItem().equals("Cake")){
             name="Cake";
         }
           //It converts bill upto two decimal places 
           DecimalFormat df = new DecimalFormat("###.##");
           //Getting information written in textfields
          price=Double.parseDouble(priceTF.getText());
             quantity=Integer.parseInt(quantityTF.getText());
             sid=idTF.getText();
             dis=Double.parseDouble(disTF.getText());
            total= Double.parseDouble(df.format((price*quantity)/((dis/100)+1)));
             //Sending it to sub class and suuper class
             e.setId(sid);
             e.setName(name);
             e.setPrice(price);
             e.setQuantity(quantity);
             e.setTotal(total);
             ((StaffS)e).setDis(dis);
            //Loop will run to check that entered id already exist in file or not  
             for(StaffS x: array){
                if(x.getId().equals(sid)){

                    count=count+1;
                    
                }
                
             }
              // if id already exist
             if(count>=1){
             JOptionPane.showMessageDialog(null,"ID Already used.Try another one.");
             }
             // if id not exist
             else if(count==0) {
                    array.add((StaffS)e);
             writeToFile();
                    JOptionPane.showMessageDialog(null,"Done");
                }
             
        }
      
    }//GEN-LAST:event_doneBtnActionPerformed

    private void searchBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchBtnActionPerformed
      // TODO add your handling code here:
      //Abubakar
      if(e instanceof Retail){
          e=new Retail();
          readFromFile();
          count=0;
          
          if(array1.size()>0){
              
            input=JOptionPane.showInputDialog(null,"Search Retail Sale by ID");

            //Loop will run to check that entered id already exist in file or not
             for(Retail x: array1){
                if(x.getId().equals(input)){

                    count=count+1;
                    
                }
                
             }
              
            // if id exists it shows what's available in that id
             if(count>=1){
          for(Retail x:array1){
              if(x.getId().equals(input)){
                 
              JOptionPane.showMessageDialog(null,x.printDetails());
              break;
              }
           }
          }
             // if id not exist
             else if(count==0){
                  JOptionPane.showMessageDialog(null,"ID not Exist");
                  } 
        }
          //if file is empty
        else{
        JOptionPane.showMessageDialog(null,"Sorry. Your Array Or Record is Empty");
        }
      }
      
      else if(e instanceof StaffS){
          e=new StaffS();
          readFromFile();
          count=0;
          if(array.size()>0){
      input=JOptionPane.showInputDialog(null,"Search Staff Sale by ID");
      //Loop will run to check that entered id already exist in file or not
          for(StaffS x: array){
                if(x.getId().equals(input)){

                    count=count+1;
                    
                }
                
             }
              
            // if id exists it shows what's available in that id
             if(count>=1){
          for(StaffS x:array){
              if(x.getId().equals(input)){
                 
              JOptionPane.showMessageDialog(null,x.printDetails());
              break;
              }
           }
          }
             // if id not exist
             else if(count==0){
                  JOptionPane.showMessageDialog(null,"ID not Exist");
                  } 
     
      }
       else{
      JOptionPane.showMessageDialog(null,"Sorry. Your Array Or Record is Empty");
      }
      }
      
      //Mark
      if(p instanceof ODairy){
        p=new ODairy();
            
        readFromFile();
        count2=0;
        if(array4.size()>=1){
         pInput=JOptionPane.showInputDialog(null,"Please enter Dairy ID");
            for(ODairy x:array4){
                if(x.getId().equals(pInput)){
                count2=count2+1;
                }
            }
            if(count2>=1){
                for(ODairy x: array4){
                    if(x.getId().equals(pInput)){
                    JOptionPane.showMessageDialog(null,x.printDetails());
                    break;
                    }
                }
            
            }
            else if(count2==0){
            JOptionPane.showMessageDialog(null,"ID not Exist");
            }
        
        }
        else{
        JOptionPane.showMessageDialog(null,"Sorry. Your Array Or Record is Empty");
        }        
        }
        
         if(p instanceof Packaging){
        p=new Packaging();
            
        readFromFile();
        count2=0;
        if(array5.size()>=1){
         pInput=JOptionPane.showInputDialog(null,"Please enter Dairy ID");
            for(Packaging x:array5){
                if(x.getId().equals(pInput)){
                count2=count2+1;
                }
            }
            if(count2>=1){
                for(Packaging x: array5){
                    if(x.getId().equals(pInput)){
                    JOptionPane.showMessageDialog(null,x.printDetails());
                    break;
                    }
                }
            
            }
            else if(count2==0){
             JOptionPane.showMessageDialog(null,"ID not Exist");
            }
        
        }
        else{
            JOptionPane.showMessageDialog(null,"Sorry. Your Array Or Record is Empty");
        }        
        }
      
    }//GEN-LAST:event_searchBtnActionPerformed

    private void clearBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearBtnActionPerformed
        // TODO add your handling code here:
        // it clear all text fields 
        if(e instanceof Retail){
            priceTF.setText("");
            quantityTF.setText("");
            commentTF.setText("");
            idTF.setText("");            
        }
         if(e instanceof StaffS){
            priceTF.setText("");
            quantityTF.setText("");
            idTF.setText("");
            disTF.setText("");
        }
    }//GEN-LAST:event_clearBtnActionPerformed

    private void returnBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_returnBtnActionPerformed
        // TODO add your handling code here:
        
        // it return or delete the sale
         if(e instanceof Retail){
             readFromFile();
             count=array1.size();
             if(array1.size()>0){
             input=JOptionPane.showInputDialog(null,"Search Retail Sale by ID");
             
            for(int i=0; i<array1.size(); i++){
                if(array1.get(i).getId().equalsIgnoreCase(input)){
                    JOptionPane.showMessageDialog(null,array1.get(i).printDetails());
                    // it conforms that user still wants to delete that sales
                    delete=JOptionPane.showInputDialog(null,"Do you Still Want to Delete this Sale \n Yes Or No ");
                    if(delete.equalsIgnoreCase("Yes")){
                        array1.remove(i);
                        writeToFile();
                         JOptionPane.showMessageDialog(null,"Sale Returned from index "+i);
                         count=count-1;
                         break;
                    }
                    else if(delete.equalsIgnoreCase("No")){
                     JOptionPane.showMessageDialog(null,"Sale not Return ");
                     break;
                    }
                   else{
                     JOptionPane.showMessageDialog(null,"Please enter valid option ");
                     break;
                    }
                }
                 else if(i==count-1){
                    JOptionPane.showMessageDialog(null,"Sale not found ");
                 }
            }
         }
       else{
        JOptionPane.showMessageDialog(null,"Sorry. Your Array Or Record is Empty");
      }
      }
      
          if(e instanceof StaffS){
              readFromFile();
             count=array.size();
             if(array.size()>0){
             input=JOptionPane.showInputDialog(null,"Search Staff Sale by ID");
            for(int i=0;i<array.size();i++){
                if(array.get(i).getId().equalsIgnoreCase(input)){
                    JOptionPane.showMessageDialog(null,array.get(i).printDetails());
                    delete=JOptionPane.showInputDialog(null,"Do you Still Want to Delete this Sale \n Yes Or No ");
                    if(delete.equalsIgnoreCase("Yes")){
                        array.remove(i);
                        writeToFile();
                         JOptionPane.showMessageDialog(null,"Sale Returned from index "+i);
                         count=count-1;
                         break;
                    }
                    else if(delete.equalsIgnoreCase("No")){
                     JOptionPane.showMessageDialog(null,"Sale not Return ");
                     break;
                    } 
                    else{
                     JOptionPane.showMessageDialog(null,"Please enter valid option ");
                     break;
                    } 
                    
                }
                else if(i==count-1){
                    JOptionPane.showMessageDialog(null,"Sale not found ");
                }
                
            }
             }
            else{
      JOptionPane.showMessageDialog(null,"Sorry. Your Array Or Record is Empty");
      }
      }
         
         
    }//GEN-LAST:event_returnBtnActionPerformed

    private void daiBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_daiBtnActionPerformed
        // TODO add your handling code here:
        //Umer
         c=new Dairy();
        box3.setVisible(false);
        box4.setVisible(true);
        matLbl.setVisible(false);
        matTF.setVisible(false);
        idLbl.setVisible(true);
        idTF.setVisible(true);
        priceTF.setVisible(true);
        priceLbl.setVisible(true);
         quantityLbl.setVisible(true);
        quantityTF.setVisible(true);
       updateBtn.setVisible(true);
        dateLbl.setVisible(true);
        dateTF.setVisible(true);
        temTF.setVisible(true);
        temLbl.setVisible(true);
    
      doneBtn.setVisible(false);
       
        //Abubakar
        
       
        
        Box2.setVisible(false);
        disLbl.setVisible(false);
        disTF.setVisible(false);
       
        clearBtn.setVisible(false);
        searchBtn.setVisible(false);
        returnBtn.setVisible(false);
        
        commentLbl.setVisible(false);
        commentTF.setVisible(false);
    }//GEN-LAST:event_daiBtnActionPerformed

    private void comboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboBoxActionPerformed
        // TODO add your handling code here:
        
        if(comboBox.getSelectedItem().equals("Update Stock")){
            //Umer
            pacBtn.setVisible(true);
            daiBtn.setVisible(true);
         packBtn.setVisible(false);
         updateBtn.setVisible(false);
         conformBtn.setVisible(false);
        dairyBtn.setVisible(false);
             matLbl.setVisible(false);
            matTF.setVisible(false);
        temTF.setVisible(false);
        temLbl.setVisible(false);
        dateLbl.setVisible(false);
        dateTF.setVisible(false);
        box3.setVisible(false);
        box4.setVisible(false);
        daiSBtn.setVisible(false);
        packSBtn.setVisible(false);
        //Abubakar
        priceLbl.setVisible(false);
        priceTF.setVisible(false);
        quantityLbl.setVisible(false);
        quantityTF.setVisible(false);
        idLbl.setVisible(false);
        idTF.setVisible(false);
        Box2.setVisible(false);
        disLbl.setVisible(false);
        disTF.setVisible(false);
        idTF.setVisible(false);
      
        clearBtn.setVisible(false);
        searchBtn.setVisible(false);
        returnBtn.setVisible(false);
        doneBtn.setVisible(false);
        commentLbl.setVisible(false);
        commentTF.setVisible(false);
        nameLbl.setVisible(false);
        nameTF.setVisible(false);
        }
    
        else if(comboBox.getSelectedItem().equals("Check Stock")){
           //Umer
            pacBtn.setVisible(false);
            daiBtn.setVisible(false);
            daiSBtn.setVisible(true);
            packSBtn.setVisible(true);
            updateBtn.setVisible(false);
            packBtn.setVisible(false);
            dairyBtn.setVisible(false);
            matLbl.setVisible(false);
            matTF.setVisible(false);
            temTF.setVisible(false);
            temLbl.setVisible(false);
            dateLbl.setVisible(false);
            dateTF.setVisible(false);
            box3.setVisible(false);
            box4.setVisible(false);
            //Abubakar
            priceLbl.setVisible(false);
            priceTF.setVisible(false);
            quantityLbl.setVisible(false);
            quantityTF.setVisible(false);
            idLbl.setVisible(false);
            idTF.setVisible(false);
            Box2.setVisible(false);
            disLbl.setVisible(false);
            disTF.setVisible(false);
            idTF.setVisible(false);

            clearBtn.setVisible(false);
            searchBtn.setVisible(false);
            returnBtn.setVisible(false);
            doneBtn.setVisible(false);
            commentLbl.setVisible(false);
            commentTF.setVisible(false);
        }
    }//GEN-LAST:event_comboBoxActionPerformed

    private void packSBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_packSBtnActionPerformed
        // TODO add your handling code here:
          c=new Packing();
          //it reads every thing from file and store it in array. 
        readFromFile();
        count1=0;
        if(array3.size()>=1){
         sInput=JOptionPane.showInputDialog(null,"Please enter Packing ID");
            for(Packing x:array3){
                //if user input is equal to some id that already exist in file. And increse counter
                if(x.getId().equals(sInput)){
                count1=count1+1;
                }
            }
            //if counter is greater then 1 
            if(count1>=1){
                for(Packing x: array3){
                    if(x.getId().equals(sInput)){
                    JOptionPane.showMessageDialog(null,x.printDetails());
                    break;
                    }
                }
            
            }
            //if counter is 0
            else if(count1==0){
            JOptionPane.showMessageDialog(null,"ID not Exist");
            }
        
        }
        //If array is empty
        else{
        JOptionPane.showMessageDialog(null,"Sorry. Your Array Or Record is Empty");
        }
    }//GEN-LAST:event_packSBtnActionPerformed

    private void daiSBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_daiSBtnActionPerformed
        // TODO add your handling code here:
         c=new Dairy();
    readFromFile();
        count1=0;
        if(array2.size()>=1){
         sInput=JOptionPane.showInputDialog(null,"Please enter Dairy ID");
            for(Dairy x:array2){
                if(x.getId().equals(sInput)){
                count1=count1+1;
                }
            }
            if(count1>=1){
                for(Dairy x:array2){
                    if(x.getId().equals(sInput)){
                    JOptionPane.showMessageDialog(null,x.printDetails());
                    break;
                    }
                }
            
            }
            else if(count1==0){
            JOptionPane.showMessageDialog(null,"ID not Exist");
            }
        
        }
        else{
        JOptionPane.showMessageDialog(null,"Sorry. Your Array Or Record is Empty");
        }
    }//GEN-LAST:event_daiSBtnActionPerformed

    private void pacBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pacBtnActionPerformed
        // TODO add your handling code here:
        //Umer
        c=new Packing();
        box3.setVisible(true);
        box4.setVisible(false);
        matLbl.setVisible(true);
        matTF.setVisible(true);
        idLbl.setVisible(true);
        idTF.setVisible(true);
        priceTF.setVisible(true);
        priceLbl.setVisible(true);
        quantityLbl.setVisible(true);
        quantityTF.setVisible(true);
        updateBtn.setVisible(true);
        dateLbl.setVisible(false);
        dateTF.setVisible(false);
        temTF.setVisible(false);
        temLbl.setVisible(false);
        doneBtn.setVisible(false);
       
        //Abubakar
        Box2.setVisible(false);
        disLbl.setVisible(false);
        disTF.setVisible(false);
        clearBtn.setVisible(false);
        searchBtn.setVisible(false);
        returnBtn.setVisible(false);
        commentLbl.setVisible(false);
        commentTF.setVisible(false);
    }//GEN-LAST:event_pacBtnActionPerformed

    private void box3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_box3ActionPerformed
        // TODO add your handling code here:
         c=new Packing();
        
         if(box3.getSelectedItem().equals("Cups")){
             priceTF.setText("0.99");
         }
         else if(box3.getSelectedItem().equals("Spoons")){
           priceTF.setText("1.99");
         }
         else if(box3.getSelectedItem().equals("Tea Bags")){
             priceTF.setText("2.99");
         }
         else if(box3.getSelectedItem().equals("Tissues")){
             priceTF.setText("0.99");
         }
    }//GEN-LAST:event_box3ActionPerformed

    private void box4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_box4ActionPerformed
        // TODO add your handling code here:
         if(box4.getSelectedItem().equals("Milk")){
            priceTF.setText("2.99");
        }
        else if(box4.getSelectedItem().equals("Cheese")){
            priceTF.setText("3.99");
        }
        else if(box4.getSelectedItem().equals("Butter")){
            priceTF.setText("2.99");
        }
        else if(box4.getSelectedItem().equals("Yoghart")){
            priceTF.setText("4.99");
        }
        else if(box4.getSelectedItem().equals("Cake")){
            priceTF.setText("5.99");
        }
    }//GEN-LAST:event_box4ActionPerformed

    private void combPurActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_combPurActionPerformed
        // TODO add your handling code here:
         if(combPur.getSelectedItem().equals("Packaging")){
             //Mark
             p = new Packaging();
             packBtn.setVisible(true);
             updateBtn.setVisible(false);
             dairyBtn.setVisible(false);
             doneBtn.setVisible(false);
             searchBtn.setVisible(true);
             idLbl.setVisible(true);
             idTF.setVisible(true);
             nameLbl.setVisible(true);
             nameTF.setVisible(true);
             quantityLbl.setVisible(true);
             conformBtn.setVisible(true);
             quantityTF.setVisible(true);
             priceLbl.setVisible(true);
             priceTF.setVisible(true);
             temLbl.setVisible(false);
             temTF.setVisible(false);
             matLbl.setVisible(true);
             matTF.setVisible(true);
             //Umer
             pacBtn.setVisible(false);
             daiBtn.setVisible(false);
             dateLbl.setVisible(false);
             dateTF.setVisible(false);
             box3.setVisible(false);
             box4.setVisible(false);
             daiSBtn.setVisible(false);
             packSBtn.setVisible(false);
             //Abubakar

             Box2.setVisible(false);
             disLbl.setVisible(false);
             disTF.setVisible(false);
             clearBtn.setVisible(false);
             returnBtn.setVisible(false);
             commentLbl.setVisible(false);
             commentTF.setVisible(false);
    }
        if(combPur.getSelectedItem().equals("Diary")){
            p=new ODairy();
            //Mark
            packBtn.setVisible(false);
            dairyBtn.setVisible(true);
            doneBtn.setVisible(false);
            searchBtn.setVisible(true);
            idLbl.setVisible(true);
            conformBtn.setVisible(true);
            idTF.setVisible(true);
            updateBtn.setVisible(false);
            nameLbl.setVisible(true);
            nameTF.setVisible(true);
            quantityLbl.setVisible(true);
            quantityTF.setVisible(true);
            priceLbl.setVisible(true);
            priceTF.setVisible(true);
            temLbl.setVisible(true);
            temTF.setVisible(true);
            matLbl.setVisible(false);
            matTF.setVisible(false);

            //Umer
            pacBtn.setVisible(false);
            daiBtn.setVisible(false);
            dateLbl.setVisible(false);
            dateTF.setVisible(false);
            box3.setVisible(false);
            box4.setVisible(false);
            daiSBtn.setVisible(false);
            packSBtn.setVisible(false);
            
            //Abubakar
            Box2.setVisible(false);
            disLbl.setVisible(false);
            disTF.setVisible(false);
            clearBtn.setVisible(false);
            returnBtn.setVisible(false);
            commentLbl.setVisible(false);
            commentTF.setVisible(false);
        }
        
    }//GEN-LAST:event_combPurActionPerformed

    private void packBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_packBtnActionPerformed
        // TODO add your handling code here:
         if(packBtn.getSelectedItem().equals("Cups")){
             priceTF.setText("0.99");
         }
        else if(packBtn.getSelectedItem().equals("Spoons")){
             priceTF.setText("1.99");
         }
        else if(packBtn.getSelectedItem().equals("Tea Bags")){
             priceTF.setText("2.99");
         }
        else if(packBtn.getSelectedItem().equals("Tissues")){
             priceTF.setText("0.99");
         }
    }//GEN-LAST:event_packBtnActionPerformed

    private void dairyBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dairyBtnActionPerformed
        // TODO add your handling code here:
        if (dairyBtn.getSelectedItem().equals("Milk")) {
            priceTF.setText("2.99");
        }
        if (dairyBtn.getSelectedItem().equals("Cheese")) {
            priceTF.setText("3.99");
        }
        if (dairyBtn.getSelectedItem().equals("Butter")) {
            priceTF.setText("2.99");
        }
        if (dairyBtn.getSelectedItem().equals("Yoghart")) {
            priceTF.setText("4.99");
        }
        if (dairyBtn.getSelectedItem().equals("Cake")) {
            priceTF.setText("5.99");
        }
    }//GEN-LAST:event_dairyBtnActionPerformed

    private void salBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_salBtnActionPerformed
        // TODO add your handling code here:
        updateBtn.setVisible(false);
        packBtn.setVisible(false);
        dairyBtn.setVisible(false);
        daiSBtn.setVisible(false);
        conformBtn.setVisible(false);
        packSBtn.setVisible(false);
        pacBtn.setVisible(false);
        daiBtn.setVisible(false);
        Box2.setVisible(false);
        box4.setVisible(false);
        box3.setVisible(false);
        dateLbl.setVisible(false);
        dateTF.setVisible(false);
        combPur.setVisible(true);
        priceLbl.setVisible(false);
        priceTF.setVisible(false);
        disLbl.setVisible(false);
        disTF.setVisible(false);
        quantityLbl.setVisible(false);
        quantityTF.setVisible(false);
        clearBtn.setVisible(false);
        searchBtn.setVisible(false);
        returnBtn.setVisible(false);
        doneBtn.setVisible(false);
        commentLbl.setVisible(false);
        commentTF.setVisible(false);
        idLbl.setVisible(false);
        idTF.setVisible(false);
        nameLbl.setVisible(false);
        nameTF.setVisible(false);
        temLbl.setVisible(false);
        temTF.setVisible(false);
        matLbl.setVisible(false);
        matTF.setVisible(false);
        
        if(salBtn.getSelectedItem().equals("Retail Sale")){
            e = new Retail();

            combPur.setVisible(true);
            clearBtn.setVisible(true);
            searchBtn.setVisible(true);
            returnBtn.setVisible(true);
            doneBtn.setVisible(true);
            disLbl.setVisible(false);
            disTF.setVisible(false);
            Box2.setVisible(true);
            priceLbl.setVisible(true);
            priceTF.setVisible(true);
            commentLbl.setVisible(true);
            commentTF.setVisible(true);
            quantityLbl.setVisible(true);
            quantityTF.setVisible(true);

            idLbl.setVisible(true);
            idTF.setVisible(true);
        }
        else if(salBtn.getSelectedItem().equals("Staff Sale ")){
            e = new StaffS();
            combPur.setVisible(true);
            clearBtn.setVisible(true);
            searchBtn.setVisible(true);
            returnBtn.setVisible(true);
            doneBtn.setVisible(true);
            priceLbl.setVisible(true);
            priceTF.setVisible(true);
            Box2.setVisible(true);
            quantityLbl.setVisible(true);
            quantityTF.setVisible(true);
            commentLbl.setVisible(false);
            commentTF.setVisible(false);
            idLbl.setVisible(true);
            idTF.setVisible(true);
            disLbl.setVisible(true);
            disTF.setVisible(true);
        }
    }//GEN-LAST:event_salBtnActionPerformed

    private void updateBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateBtnActionPerformed
        // TODO add your handling code here:
          //Umer
        if(c instanceof Packing){
           
            readFromFile();
            c = new Packing();
            count1 = 0;

            if (box3.getSelectedItem().equals("Cups")) {
                name = "Cups";
            } else if (box3.getSelectedItem().equals("Spoons")) {
                name = "Spoon";
            } else if (box3.getSelectedItem().equals("Tea Bags")) {
                name = "Tea Bags";
            } else if (box3.getSelectedItem().equals("Tissues")) {
                name = "Tissues";
            }

            stid = idTF.getText();
            price = Double.parseDouble(priceTF.getText());
            quantity = Integer.parseInt(quantityTF.getText());
            material = matTF.getText();

            c.setName(name);
            c.setId(stid);
            c.setPrice(price);
            c.setQuantity(quantity);
            ((Packing) c).setMaterial(material);

            for (Packing x : array3) {
                if (x.getId().equals(stid)) {

                    count1 = count1 + 1;

                }

            }
            if (count1 >= 1) {
                JOptionPane.showMessageDialog(null, "ID Already used.Try another one.");
            } else if (count1 == 0) {
                array3.add((Packing) c);
                writeToFile();
                JOptionPane.showMessageDialog(null, "Stock updated");
            }

            
        }
        else if( c instanceof Dairy){
          
            readFromFile();
            c = new Dairy();
            count1 = 0;

            if (box4.getSelectedItem().equals("Milk")) {
                name = "Milk";
            } 
            else if (box4.getSelectedItem().equals("Cheese")) {
                name = "Cheese";
            } 
            else if (box4.getSelectedItem().equals("Butter")) {
                name = "Butter";
            } 
            else if (box4.getSelectedItem().equals("Yoghart")) {
                name = "Yoghart";
            } 
            else if (box4.getSelectedItem().equals("Cake")) {
                name = "Cake";
            }
            date = dateTF.getText();
            temp = Integer.parseInt(temTF.getText());
            stid = idTF.getText();
            price = Double.parseDouble(priceTF.getText());
            quantity = Integer.parseInt(quantityTF.getText());

            c.setName(name);
            c.setId(stid);
            c.setPrice(price);
            ((Dairy) c).setDate(date);
            ((Dairy) c).setTemperature(temp);

            for (Dairy x : array2) {
                if (x.getId().equals(stid)) {

                    count1 = count1 + 1;

                }

            }
            if (count1 >= 1) {
                JOptionPane.showMessageDialog(null, "ID Already used.Try another one.");
            } 
            else if (count1 == 0) {
                array2.add((Dairy) c);
                writeToFile();
                JOptionPane.showMessageDialog(null, "Stock updated");
            }
        }
    }//GEN-LAST:event_updateBtnActionPerformed

    private void conformBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_conformBtnActionPerformed
        // TODO add your handling code here:
        //Mark
        if(p instanceof ODairy){
            p = new ODairy();
            readFromFile();
            count2 = 0;
            if (dairyBtn.getSelectedItem().equals("Milk")) {
                name = "Milk";
            } 
            else if (dairyBtn.getSelectedItem().equals("Cheese")) {
                name = "Cheese";
            } 
            else if (dairyBtn.getSelectedItem().equals("Butter")) {
                name = "Butter";
            } 
            else if (dairyBtn.getSelectedItem().equals("Yoghart")) {
                name = "Yoghart";
            } 
            else if (dairyBtn.getSelectedItem().equals("Cake")) {
                name = "Cake";
            }

            pid = idTF.getText();
            cName = nameTF.getText();
            quantity = Integer.parseInt(quantityTF.getText());
            temp = Integer.parseInt(temTF.getText());
            cost = Double.parseDouble(priceTF.getText());

            p.setId(pid);
            p.setcName(cName);
            p.setName(name);
            p.setQuantity(quantity);
            p.setCost(cost);
            ((ODairy) p).setTemperature(temp);

            for (ODairy x : array4) {
                if (x.getId().equals(pid)) {

                    count2 = count2 + 1;

                }

            }
            if (count2 >= 1) {
                JOptionPane.showMessageDialog(null, "ID Already used.Try another one.");
            } 
            else if (count2 == 0) {
                array4.add((ODairy) p);
                writeToFile();
                JOptionPane.showMessageDialog(null, "Stock updated");
            }
        }
        
        if(p instanceof Packaging){
            p = new Packaging();
            readFromFile();
            count2 = 0;
            if (packBtn.getSelectedItem().equals("Cups")) {
                name = "Cups";
            } 
            else if (packBtn.getSelectedItem().equals("Spoons")) {
                name = "Spoon";
            } 
            else if (packBtn.getSelectedItem().equals("Tea Bags")) {
                name = "Tea Bags";
            } 
            else if (packBtn.getSelectedItem().equals("Tissues")) {
                name = "Tissues";
            }

            pid = idTF.getText();
            cName = nameTF.getText();
            quantity = Integer.parseInt(quantityTF.getText());
            cost = Double.parseDouble(priceTF.getText());
            material = matTF.getText();

            p.setId(pid);
            p.setName(name);
            p.setcName(cName);
            p.setQuantity(quantity);
            p.setCost(cost);
            ((Packaging) p).setMaterials(material);

            for (Packaging x : array5) {
                if (x.getId().equals(pid)) {

                    count2 = count2 + 1;

                }

            }
            if (count2 >= 1) {
                JOptionPane.showMessageDialog(null, "ID Already used.Try another one.");
            } else if (count2 == 0) {
                array5.add((Packaging) p);
                writeToFile();
                JOptionPane.showMessageDialog(null, "Stock updated");
            }
        
        }
    }//GEN-LAST:event_conformBtnActionPerformed

    public void writeToFile(){
    
        //it get sales, stock and purchase orders that is stored in array and Write it to file 
        //Abubakar
        if(e instanceof Retail){
            try{
                File f=new File("Retail.txt");
                FileOutputStream fStream=new FileOutputStream(f);
                ObjectOutputStream oStream=new ObjectOutputStream(fStream);
                oStream.writeObject(array1);
                oStream.close();
               
            }
            catch(IOException x){
                System.out.println(x);
            }
        }
        
        if(e instanceof StaffS){
            try{
                File f=new File("Staff.txt");
                FileOutputStream fStream=new FileOutputStream(f);
                ObjectOutputStream oStream=new ObjectOutputStream(fStream);
                oStream.writeObject(array);
                oStream.close();
               
            }
            catch(IOException x){
                System.out.println(x);
            }
        }
        //Umer
         if(c instanceof Packing){
             try {
                 File f = new File("packagingStock.txt");
                 FileOutputStream fStream = new FileOutputStream(f);
                 ObjectOutputStream oStream = new ObjectOutputStream(fStream);
                 oStream.writeObject(array3);
                 oStream.close();
             } catch (IOException p) {
                 System.out.println(p);
             }
        }
            if(c instanceof Dairy){
                try {
                    File f = new File("dairyStock.txt");
                    FileOutputStream fStream = new FileOutputStream(f);
                    ObjectOutputStream oStream = new ObjectOutputStream(fStream);
                    oStream.writeObject(array2);
                    oStream.close();
                } catch (IOException p) {
                    System.out.println(p);
                }
        }     
    
            //Mark
            
            if(p instanceof Packaging){
                try {
                    File f = new File("packagingOrder.txt");
                    FileOutputStream fStream = new FileOutputStream(f);
                    ObjectOutputStream oStream = new ObjectOutputStream(fStream);
                    oStream.writeObject(array5);
                    oStream.close();
                } catch (IOException r) {
                    System.out.println(r);
                }
        }
            if(p instanceof ODairy){
                try {
                    File f = new File("DairyOrder.txt");
                    FileOutputStream fStream = new FileOutputStream(f);
                    ObjectOutputStream oStream = new ObjectOutputStream(fStream);
                    oStream.writeObject(array4);
                    oStream.close();
                } catch (IOException o) {
                    System.out.println(o);
                }
        }
    }
    
      public void readFromFile(){
    
          //it stores sales, stock and purchase orders back to array from file.
          //Abubakar
        if(e instanceof Retail){
            try{
                File f=new File("Retail.txt");
                FileInputStream fStream=new FileInputStream(f);
                ObjectInputStream oStream=new ObjectInputStream(fStream);
                array1=(ArrayList<Retail>)oStream.readObject();
                oStream.close();
               
            }
            catch(IOException|ClassNotFoundException x){
                System.out.println(x);
            }
        }
        
        if(e instanceof StaffS){
            try{
                File f=new File("Staff.txt");
                FileInputStream fStream=new FileInputStream(f);
                ObjectInputStream oStream=new ObjectInputStream(fStream);
                array=(ArrayList<StaffS>)oStream.readObject();
                oStream.close();
               
            }
            catch(IOException |ClassNotFoundException x){
                System.out.println(x);
            }
        }
    
        //Umer
         if(c instanceof Packing){
        
              try {
                  File f = new File("packagingStock.txt");
                  FileInputStream fStream = new FileInputStream(f);
                  ObjectInputStream oStream = new ObjectInputStream(fStream);
                  array3 = (ArrayList<Packing>) oStream.readObject();
                  oStream.close();
              } 
              catch (IOException | ClassNotFoundException i) {
                  System.out.println(i);
              }
          }
            if(c instanceof Dairy){
        
                try {
                    File f = new File("dairyStock.txt");
                    FileInputStream fStream = new FileInputStream(f);
                    ObjectInputStream oStream = new ObjectInputStream(fStream);
                    array2 = (ArrayList<Dairy>) oStream.readObject();
                    oStream.close();
                } 
                catch (IOException | ClassNotFoundException i) {
                    System.out.println(i);
                }
            }
            
            //Mark
             if(p instanceof Packaging){
        
                 try {
                     File f = new File("packagingOrder.txt");
                     FileInputStream fStream = new FileInputStream(f);
                     ObjectInputStream oStream = new ObjectInputStream(fStream);
                     array5 = (ArrayList<Packaging>) oStream.readObject();
                     oStream.close();
                 } 
                 catch (IOException | ClassNotFoundException s) {
                     System.out.println(s);
                 }
            }
            if(p instanceof ODairy){
        
                try {
                    File f = new File("DairyOrder.txt");
                    FileInputStream fStream = new FileInputStream(f);
                    ObjectInputStream oStream = new ObjectInputStream(fStream);
                    array4 = (ArrayList<ODairy>) oStream.readObject();
                    oStream.close();
                } 
                catch (IOException | ClassNotFoundException i) {
                    System.out.println(i);
                }
            }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CoffeeGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CoffeeGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CoffeeGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CoffeeGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CoffeeGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> Box2;
    private javax.swing.JComboBox<String> box3;
    private javax.swing.JComboBox<String> box4;
    private javax.swing.JButton clearBtn;
    private javax.swing.JComboBox<String> combPur;
    private javax.swing.JComboBox<String> comboBox;
    private javax.swing.JLabel commentLbl;
    private javax.swing.JTextField commentTF;
    private javax.swing.JButton conformBtn;
    private javax.swing.JButton daiBtn;
    private javax.swing.JButton daiSBtn;
    private javax.swing.JComboBox<String> dairyBtn;
    private javax.swing.JLabel dateLbl;
    private javax.swing.JTextField dateTF;
    private javax.swing.JLabel disLbl;
    private javax.swing.JTextField disTF;
    private javax.swing.JButton doneBtn;
    private javax.swing.JLabel idLbl;
    private javax.swing.JTextField idTF;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel matLbl;
    private javax.swing.JTextField matTF;
    private javax.swing.JLabel nameLbl;
    private javax.swing.JTextField nameTF;
    private javax.swing.JButton pacBtn;
    private javax.swing.JComboBox<String> packBtn;
    private javax.swing.JButton packSBtn;
    private javax.swing.JLabel priceLbl;
    private javax.swing.JTextField priceTF;
    private javax.swing.JLabel quantityLbl;
    private javax.swing.JTextField quantityTF;
    private javax.swing.JButton returnBtn;
    private javax.swing.JComboBox<String> salBtn;
    private javax.swing.JButton searchBtn;
    private javax.swing.JLabel temLbl;
    private javax.swing.JTextField temTF;
    private javax.swing.JLabel titleLbl;
    private javax.swing.JButton updateBtn;
    // End of variables declaration//GEN-END:variables
}
